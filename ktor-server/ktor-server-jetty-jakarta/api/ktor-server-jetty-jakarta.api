public final class io/ktor/server/jetty/jakarta/EngineMain {
	public static final field INSTANCE Lio/ktor/server/jetty/jakarta/EngineMain;
	public final fun createServer ([Ljava/lang/String;)Lio/ktor/server/engine/EmbeddedServer;
	public static final fun main ([Ljava/lang/String;)V
}

public final class io/ktor/server/jetty/jakarta/Jetty : io/ktor/server/engine/ApplicationEngineFactory {
	public static final field INSTANCE Lio/ktor/server/jetty/jakarta/Jetty;
	public synthetic fun configuration (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine$Configuration;
	public fun configuration (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/jetty/jakarta/JettyApplicationEngineBase$Configuration;
	public synthetic fun create (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/engine/ApplicationEngine$Configuration;Lkotlin/jvm/functions/Function0;)Lio/ktor/server/engine/ApplicationEngine;
	public fun create (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/jetty/jakarta/JettyApplicationEngineBase$Configuration;Lkotlin/jvm/functions/Function0;)Lio/ktor/server/jetty/jakarta/JettyApplicationEngine;
}

public final class io/ktor/server/jetty/jakarta/JettyApplicationCall : io/ktor/server/engine/BaseApplicationCall {
	public fun <init> (Lio/ktor/server/application/Application;Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;Lkotlin/coroutines/CoroutineContext;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public synthetic fun getRequest ()Lio/ktor/server/engine/BaseApplicationRequest;
	public fun getRequest ()Lio/ktor/server/jetty/jakarta/JettyApplicationRequest;
	public synthetic fun getRequest ()Lio/ktor/server/request/ApplicationRequest;
	public synthetic fun getRequest ()Lio/ktor/server/request/PipelineRequest;
	public synthetic fun getResponse ()Lio/ktor/server/engine/BaseApplicationResponse;
	public fun getResponse ()Lio/ktor/server/jetty/jakarta/JettyApplicationResponse;
	public synthetic fun getResponse ()Lio/ktor/server/response/ApplicationResponse;
	public synthetic fun getResponse ()Lio/ktor/server/response/PipelineResponse;
}

public final class io/ktor/server/jetty/jakarta/JettyApplicationEngine : io/ktor/server/jetty/jakarta/JettyApplicationEngineBase {
	public fun <init> (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/jetty/jakarta/JettyApplicationEngineBase$Configuration;Lkotlin/jvm/functions/Function0;)V
	public synthetic fun start (Z)Lio/ktor/server/engine/ApplicationEngine;
	public fun start (Z)Lio/ktor/server/jetty/jakarta/JettyApplicationEngine;
	public synthetic fun start (Z)Lio/ktor/server/jetty/jakarta/JettyApplicationEngineBase;
}

public class io/ktor/server/jetty/jakarta/JettyApplicationEngineBase : io/ktor/server/engine/BaseApplicationEngine {
	public fun <init> (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/jetty/jakarta/JettyApplicationEngineBase$Configuration;Lkotlin/jvm/functions/Function0;)V
	public final fun getConfiguration ()Lio/ktor/server/jetty/jakarta/JettyApplicationEngineBase$Configuration;
	protected final fun getServer ()Lorg/eclipse/jetty/server/Server;
	public synthetic fun start (Z)Lio/ktor/server/engine/ApplicationEngine;
	public fun start (Z)Lio/ktor/server/jetty/jakarta/JettyApplicationEngineBase;
	public fun stop (JJ)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/jetty/jakarta/JettyApplicationEngineBase$Configuration : io/ktor/server/engine/BaseApplicationEngine$Configuration {
	public fun <init> ()V
	public final fun getConfigureServer ()Lkotlin/jvm/functions/Function1;
	public final fun getHttpConfiguration ()Lkotlin/jvm/functions/Function1;
	public final fun getIdleTimeout-UwyO8pc ()J
	public final fun setConfigureServer (Lkotlin/jvm/functions/Function1;)V
	public final fun setHttpConfiguration (Lkotlin/jvm/functions/Function1;)V
	public final fun setIdleTimeout-LRDsOJo (J)V
}

public final class io/ktor/server/jetty/jakarta/JettyApplicationRequest : io/ktor/server/engine/BaseApplicationRequest {
	public fun <init> (Lio/ktor/server/application/PipelineCall;Lorg/eclipse/jetty/server/Request;)V
	public fun getCookies ()Lio/ktor/server/request/RequestCookies;
	public fun getLocal ()Lio/ktor/http/RequestConnectionPoint;
	public fun getQueryParameters ()Lio/ktor/http/Parameters;
	public fun getRawQueryParameters ()Lio/ktor/http/Parameters;
}

public final class io/ktor/server/jetty/jakarta/JettyApplicationResponse : io/ktor/server/engine/BaseApplicationResponse, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lio/ktor/server/application/PipelineCall;Lorg/eclipse/jetty/server/Request;Lorg/eclipse/jetty/server/Response;Lkotlin/coroutines/CoroutineContext;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getHeaders ()Lio/ktor/server/response/ResponseHeaders;
}

public final class io/ktor/server/jetty/jakarta/JettyConnectionPoint : io/ktor/http/RequestConnectionPoint {
	public fun <init> (Lorg/eclipse/jetty/server/Request;)V
	public fun getHost ()Ljava/lang/String;
	public fun getLocalAddress ()Ljava/lang/String;
	public fun getLocalHost ()Ljava/lang/String;
	public fun getLocalPort ()I
	public fun getMethod ()Lio/ktor/http/HttpMethod;
	public fun getPort ()I
	public fun getRemoteAddress ()Ljava/lang/String;
	public fun getRemoteHost ()Ljava/lang/String;
	public fun getRemotePort ()I
	public fun getScheme ()Ljava/lang/String;
	public fun getServerHost ()Ljava/lang/String;
	public fun getServerPort ()I
	public fun getUri ()Ljava/lang/String;
	public fun getVersion ()Ljava/lang/String;
}

public final class io/ktor/server/jetty/jakarta/JettyHeaders : io/ktor/http/Headers {
	public fun <init> (Lorg/eclipse/jetty/server/Request;)V
	public fun contains (Ljava/lang/String;)Z
	public fun contains (Ljava/lang/String;Ljava/lang/String;)Z
	public fun entries ()Ljava/util/Set;
	public fun forEach (Lkotlin/jvm/functions/Function2;)V
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getAll (Ljava/lang/String;)Ljava/util/List;
	public fun getCaseInsensitiveName ()Z
	public fun isEmpty ()Z
	public fun names ()Ljava/util/Set;
}

public final class io/ktor/server/jetty/jakarta/JettyRequestCookies : io/ktor/server/request/RequestCookies {
	public fun <init> (Lio/ktor/server/jetty/jakarta/JettyApplicationRequest;Lorg/eclipse/jetty/server/Request;)V
}

public final class io/ktor/server/jetty/jakarta/JettyWebsocketConnection : org/eclipse/jetty/io/AbstractConnection, kotlinx/coroutines/CoroutineScope, org/eclipse/jetty/io/Connection$UpgradeTo {
	public fun <init> (Lorg/eclipse/jetty/io/EndPoint;Lkotlin/coroutines/CoroutineContext;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getInputChannel ()Lio/ktor/utils/io/ByteChannel;
	public final fun getOutputChannel ()Lio/ktor/utils/io/ByteChannel;
	public fun onFillable ()V
	public fun onUpgradeTo (Ljava/nio/ByteBuffer;)V
}

